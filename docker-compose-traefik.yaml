version: "3.8"

services:
  # Traefik reverse proxy
  traefik:
    image: traefik:v2.5
    networks:
      - traefik-public
      - default
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"

  # FastAPI web server
  fastapi:
    depends_on: 
      - postgres
    command: ["bash", "-c", "./pre_test_backend.sh"]
    entrypoint: ["poetry run uvicorn src.main:app --port 8000"]
    build:
      context: ./harcownik-backend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`api.example.com`)"
      - "traefik.http.routers.fastapi.entrypoints=web"
      - "traefik.http.services.fastapi.loadbalancer.server.port=80"

  # PostgreSQL database
  postgres:
    image: postgres:13
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=admin
      - POSTGRES_DB=postgres
      - PGDATA=/var/lib/postgresql/data/pgdata

  # PgAdmin web interface
  pgadmin:
    depends_on:
      - postgres
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=your_email@example.com
      - PGADMIN_DEFAULT_PASSWORD=your_pgadmin_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.example.com`)"
      - "traefik.http.routers.pgadmin.entrypoints=web"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

  # React frontend
  frontend:
    build:
      context: ./harcownik-frontend
      dockerfile: Dockerfile
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`example.com`)"
      - "traefik.http.routers.frontend.entrypoints=web"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"

volumes:
  app-db-data:

networks:
  traefik-public:
